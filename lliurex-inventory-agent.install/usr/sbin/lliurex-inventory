#!/bin/sh

#  Description:
#
# Simple tool to manage inventory agent in LliureX
#

###############
# global vars #
###############

PACKAGE_NAME="lliurex-inventory-agent"
DIVERTED_FILE="/etc/glpi-agent/agent.cfg.diverted"
#ORIGINAL_FILE="/etc/glpi-agent/agent.cfg"
ORIGINAL_FILE="/etc/glpi-agent/conf.d/50-lliurex-inventory.cfg"
LLIUREX_FILE="/usr/share/lliurex-inventory-agent/agent.cfg"
SERVICE_NAME="glpi-agent"
AGENT_CND="glpi-agent"

die(){
        TYPE="ERROR"
        if [ "$#" -gt 1 ] ; then
                TYPE="$1"
                shift
        fi
        printf "${TYPE}: " >&2
        while [ "$1" ] ; do
                echo "$1" >&2
                shift
        done
        echo "" >&2

        exit 1
}

usage(){
	die "Usage" "$(basename "$0") {configure|unconfigure|status|start|stopi|run}" \
	"       $(basename "$0") [ --force ] restart"
}

config_install(){
	# diversion is not needed as we now use conf.d directory
	## divert original glpi-agent configuration
	## (if original file is not already diverted)
	#if [ ! -r "$DIVERTED_FILE" ] ; then
	#	dpkg-divert --package $PACKAGE_NAME --rename --quiet --add --divert  $DIVERTED_FILE  $ORIGINAL_FILE
	#fi

	# link lliurex file to replace original file
	# (if original file is not already linked)
	if [ ! -L $ORIGINAL_FILE ] ; then
		# test to avoid deletion of lliurex file
		if [ "$(readlink -f "$ORIGINAL_FILE")" != "${LLIUREX_FILE}"  ] ; then
			rm -rf "$ORIGINAL_FILE" || true
			ln -fs "$LLIUREX_FILE" "$ORIGINAL_FILE"
		fi
	fi
}

config_remove(){
	# diversion is not needed as we now use conf.d directory
	# check if actual file is a symbolic link and remove it
	if [ -L "$ORIGINAL_FILE" ] ; then
		rm $ORIGINAL_FILE
	fi

	# diversion is not needed as we now use conf.d directory
	## check existence of diverted file and remove diversion
	#if [ -e "$DIVERTED_FILE" ] ; then
	#	dpkg-divert --package "$PACKAGE_NAME" --rename --quiet --remove "$ORIGINAL_FILE"
	#fi
}

service_mgr(){
	case "$1" in
		is_active)
			rc=0
			systemctl is-active --quiet $SERVICE_NAME || rc=$?
			return $rc
		;;
		start|stop)
			systemctl $1 $SERVICE_NAME || true
		;;
	esac
	return 0
}

service_restart(){
	if [ "$1" = "--force" ] || [ "$(service_mgr status)" = "running" ] ; then
		service_mgr stop
		service_mgr start
	fi	       
	return 0
}

main(){
	[ "$1" ] || usage
	RESTART_OPTIONS=""
	if [ "$1" = "--force" ] ; then
		RESTART_OPTIONS="$1"
		shift
	fi

	case "$1" in
		configure)
			config_install
			service_restart --force
		;;

		unconfigure)
			config_remove
			service_restart --force
		;;

		stop|start)
			service_mgr "$1"
		;;
		run)
			$AGENT_CMD || true
		;;

		restart)
			service_restart $RESTART_OPTIONS
		;;

		status)
			rc=0
			service_mgr is_active || rc=$?
			if [ $rc -ne 0 ] ; then
				echo "not running"
				return $rc
			fi
			echo "running"
		;;

		*)
			usage
		;;
	esac
	return 0
}

################
# main program #
################
main "$@"
exit 0

